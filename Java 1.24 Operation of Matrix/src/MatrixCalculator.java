import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.Arrays;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.apache.commons.math3.linear.MatrixUtils;
import org.apache.commons.math3.linear.RealMatrix;




/**
 *
 * @author felixdev
 */
public class MatrixCalculator extends javax.swing.JFrame {
    String operationType;
    /**
     * Creates new form MatrixCalculator
     */  
    public MatrixCalculator() {
        initComponents();
    }

    public void updateMatrixPanel(JPanel pnlMatrix, int numberOfRows, int numberOfColumns) {
        pnlMatrix.setLayout(new GridLayout(numberOfRows, numberOfColumns, 3, 3));
        pnlMatrix.removeAll();

        for (int i = 0; i < numberOfRows; i++) {
            for (int j = 0; j < numberOfColumns; j++) {
                JTextField textField = new JTextField();
                textField.setPreferredSize(new Dimension(40, 40));
                pnlMatrix.add(textField);
            }
        }

        pnlMatrix.revalidate();
        pnlMatrix.repaint();
    }
    
    private void performMatrixOperation(String operation) {
        // Get the number of rows and columns of Matrix A and B
        int numberOfRowsA = (int) spnRowA.getValue();
        int numberOfColumnsA = (int) spnColA.getValue();
        int numberOfRowsB = (int) spnRowB.getValue();
        int numberOfColumnsB = (int) spnColB.getValue();

        // Create arrays to hold the values of Matrix A and B
        double[][] matrixA = new double[numberOfRowsA][numberOfColumnsA];
        double[][] matrixB = new double[numberOfRowsB][numberOfColumnsB];

        // Get the values from the JTextFields in pnlMatrixA and pnlMatrixB
        for (int i = 0; i < numberOfRowsA; i++) {
            for (int j = 0; j < numberOfColumnsA; j++) {
                JTextField textField = (JTextField) pnlMatrixA.getComponent(i * numberOfColumnsA + j);
                matrixA[i][j] = Double.parseDouble(textField.getText());
            }
        }

        for (int i = 0; i < numberOfRowsB; i++) {
            for (int j = 0; j < numberOfColumnsB; j++) {
                JTextField textField = (JTextField) pnlMatrixB.getComponent(i * numberOfColumnsB + j);
                matrixB[i][j] = Double.parseDouble(textField.getText());
            }
        }

        // Perform the specified operation on Matrix A and B
        double[][] resultMatrix = new double[numberOfRowsA][numberOfColumnsA];
        if (operation.equals("multiplication")) {
            for (int i = 0; i < numberOfRowsA; i++) {
                for (int j = 0; j < numberOfColumnsB; j++) {
                    double sum = 0;
                    for (int k = 0; k < numberOfColumnsA; k++) {
                        sum += matrixA[i][k] * matrixB[k][j];
                    }
                    resultMatrix[i][j] = sum;
                }
            }
        } 

        StringBuilder sb = new StringBuilder();
        sb.append(operation).append(" result:\n");
        if (resultMatrix.length >= 2 && resultMatrix[0].length >= 2) {
            double[][] result2x2 = new double[2][2];
            result2x2[0][0] = resultMatrix[0][0];
            result2x2[0][1] = resultMatrix[0][1];
            result2x2[1][0] = resultMatrix[1][0];
            result2x2[1][1] = resultMatrix[1][1];
            sb.append(String.format("%8.2f %8.2f\n", result2x2[0][0], result2x2[0][1]));
            sb.append(String.format("%8.2f %8.2f\n", result2x2[1][0], result2x2[1][1]));
        } else {
            for (int i = 0; i < resultMatrix.length; i++) {
                for (int j = 0; j < resultMatrix[0].length; j++) {
                    sb.append(String.format("%8.2f", resultMatrix[i][j])).append("  ");
                }
                sb.append("\n");
            }
        }
        lblResult.setText(sb.toString());

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        spnRowA = new javax.swing.JSpinner();
        spnColA = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        spnRowB = new javax.swing.JSpinner();
        spnColB = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        pnlMatrixB = new javax.swing.JPanel();
        pnlMatrixA = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnSubtract = new javax.swing.JButton();
        btnMultiply = new javax.swing.JButton();
        lblResult = new javax.swing.JLabel();
        pnlMatrixResult = new javax.swing.JPanel();
        btnDivision = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Matrix A:");

        jLabel3.setText("Matrix B:");

        jLabel4.setText("Row:");

        spnRowA.setModel(new javax.swing.SpinnerNumberModel(2, 2, 4, 1));
        spnRowA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnRowAStateChanged(evt);
            }
        });

        spnColA.setModel(new javax.swing.SpinnerNumberModel(2, 2, 4, 1));
        spnColA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnColAStateChanged(evt);
            }
        });

        jLabel5.setText("Columns:");

        jLabel6.setText("Columns:");

        jLabel7.setText("Row:");

        spnRowB.setModel(new javax.swing.SpinnerNumberModel(2, 2, 4, 1));
        spnRowB.setToolTipText("");
        spnRowB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnRowBStateChanged(evt);
            }
        });

        spnColB.setModel(new javax.swing.SpinnerNumberModel(2, 2, 4, 1));
        spnColB.setOpaque(true);
        spnColB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnColBStateChanged(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        pnlMatrixB.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout pnlMatrixBLayout = new javax.swing.GroupLayout(pnlMatrixB);
        pnlMatrixB.setLayout(pnlMatrixBLayout);
        pnlMatrixBLayout.setHorizontalGroup(
            pnlMatrixBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        pnlMatrixBLayout.setVerticalGroup(
            pnlMatrixBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnlMatrixA.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout pnlMatrixALayout = new javax.swing.GroupLayout(pnlMatrixA);
        pnlMatrixA.setLayout(pnlMatrixALayout);
        pnlMatrixALayout.setHorizontalGroup(
            pnlMatrixALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        pnlMatrixALayout.setVerticalGroup(
            pnlMatrixALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 135, Short.MAX_VALUE)
        );

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSubtract.setText("SUBTRACT");
        btnSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubtractActionPerformed(evt);
            }
        });

        btnMultiply.setText("MULTIPLY");
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });

        lblResult.setText("RESULT:");

        javax.swing.GroupLayout pnlMatrixResultLayout = new javax.swing.GroupLayout(pnlMatrixResult);
        pnlMatrixResult.setLayout(pnlMatrixResultLayout);
        pnlMatrixResultLayout.setHorizontalGroup(
            pnlMatrixResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        pnlMatrixResultLayout.setVerticalGroup(
            pnlMatrixResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        btnDivision.setText("DIVISION");
        btnDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spnRowB, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spnColB, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spnRowA, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spnColA, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnMultiply)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSubtract, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(btnDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlMatrixA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblResult))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlMatrixB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlMatrixResult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnRowA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(spnColA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(17, 17, 17)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnRowB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(spnColB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(54, 54, 54)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSubtract)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMultiply)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDivision))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlMatrixB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlMatrixA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(pnlMatrixResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblResult)
                                .addGap(43, 43, 43)))))
                .addContainerGap(258, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spnRowAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnRowAStateChanged
        updateMatrixPanel(pnlMatrixA, (int) spnRowA.getValue(), (int) spnColA.getValue());        
    }//GEN-LAST:event_spnRowAStateChanged

    private void spnColAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnColAStateChanged
        updateMatrixPanel(pnlMatrixA, (int) spnRowA.getValue(), (int) spnColA.getValue());        
    }//GEN-LAST:event_spnColAStateChanged

    private void spnRowBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnRowBStateChanged
        updateMatrixPanel(pnlMatrixB, (int) spnRowB.getValue(), (int) spnColB.getValue());        
       
    }//GEN-LAST:event_spnRowBStateChanged

    private void spnColBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnColBStateChanged
        updateMatrixPanel(pnlMatrixB, (int) spnRowB.getValue(), (int) spnColB.getValue());      
    }//GEN-LAST:event_spnColBStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        performMatrixOperation("addition");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubtractActionPerformed
        performMatrixOperation("subtraction");
    }//GEN-LAST:event_btnSubtractActionPerformed

    private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
        performMatrixOperation("multiplication");
    }//GEN-LAST:event_btnMultiplyActionPerformed

    private void btnDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisionActionPerformed
        performMatrixOperation("division");
    }//GEN-LAST:event_btnDivisionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatrixCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatrixCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatrixCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatrixCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatrixCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDivision;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JButton btnSubtract;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblResult;
    private javax.swing.JPanel pnlMatrixA;
    private javax.swing.JPanel pnlMatrixB;
    private javax.swing.JPanel pnlMatrixResult;
    private javax.swing.JSpinner spnColA;
    private javax.swing.JSpinner spnColB;
    private javax.swing.JSpinner spnRowA;
    private javax.swing.JSpinner spnRowB;
    // End of variables declaration//GEN-END:variables
}
